# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  # Default config
  config.ssh.insert_key = false
  config.vm.box = "ubuntu/focal64"

  # Provison
  config.vm.synced_folder "sync", "/sync"
  config.vm.provision "shell", path: "provision/set_hosts.sh"
  config.vm.provision "shell", path: "provision/fix_ssh.sh"
  config.vm.provision "shell", path: "provision/disable_ufw.sh"

  config.vm.provider :virtualbox do |config_vbox|
    config_vbox.customize ["modifyvm", :id, "--memory", "1048"] 
  end

  # Sub nodes
  [
    # ["node1", "192.168.120.101"],
    # ["node2", "192.168.120.102"],
  ].each do |node_name,node_ip|
    config.vm.define "#{node_name}" do |node|
      node.vm.hostname = "#{node_name}"

      # Node box network definitions and port expose
      node.vm.network "private_network",
        name: "vboxnet0",
        ip: "#{node_ip}",
        netmask: "24",
        hostname: true

      # Node box salt minion
      node.vm.provision :salt do |salt|
        salt.colorize = true
        salt.log_level = "all"
        salt.verbose = true
        salt.install_type = "stable"

        salt.minion_id = "#{node_name}"
        salt.minion_config = "sync/salt/conf/minion.yml"

        salt.minion_key = "sync/salt/key/#{node_name}.pem"
        salt.minion_pub = "sync/salt/key/#{node_name}.pub"
      end
    end
  end

  # Main node
  config.vm.define "main" do |node|
    node.vm.hostname = "main"

    node.vm.provider :virtualbox do |config_vbox|
      config_vbox.customize ["modifyvm", :id, "--memory", "4096"] 
    end

    node.trigger.after :up do |trigger|
      trigger.run_remote = {
        path: "sync/scripts/salt_init.sh",
        args: ["*", "main"]
      }
    end

    # Main box network definitions and port expose
    node.vm.network "private_network",
      name: "vboxnet0",
      ip: "192.168.120.100",
      netmask: "24",
      hostname: true

    # Docker remote
    node.vm.network "forwarded_port",
      guest: 2375, 
      host: 2375, 
      auto_correct: true

    # Docker registry
    node.vm.network "forwarded_port",
      guest: 5000, 
      host: 5000, 
      auto_correct: true

    # concourse remote
    node.vm.network "forwarded_port",
      guest: 9000, 
      host: 9000, 
      auto_correct: true

    # Elastic Search
    node.vm.network "forwarded_port",
      guest: 9200, 
      host: 9200, 
      auto_correct: true

    # Logstash
    node.vm.network "forwarded_port",
      guest: 5044, 
      host: 5044, 
      auto_correct: true

    # Kibana
    node.vm.network "forwarded_port",
      guest: 5601,
      host: 5601, 
      auto_correct: true

    # k8s dashboard
    node.vm.network "forwarded_port",
      guest: 8001, 
      host: 8001, 
      auto_correct: true

    # http-alt
    node.vm.network "forwarded_port",
      guest: 8080, 
      host: 8080, 
      auto_correct: true

    # Main external address
    node.vm.network "public_network",
      ip: "192.168.201.120",
      bridge: "enp0s31f6"

    # Main box salt master
    node.vm.provision :salt do |salt|
      salt.colorize = true
      salt.log_level = "all"
      salt.verbose = true
      salt.install_type = "stable"

      salt.install_master = true
      salt.no_minion = false
      salt.master_config = "sync/salt/conf/master.yml"
      salt.minion_config = "sync/salt/conf/minion.yml"

      salt.master_key = "sync/salt/key/main.pem"
      salt.master_pub = "sync/salt/key/main.pub"
      salt.minion_key = "sync/salt/key/main.pem"
      salt.minion_pub = "sync/salt/key/main.pub"

      salt.seed_master = {
        "main" => "sync/salt/key/main.pub",
        # "node1" => "sync/salt/key/node1.pub",
        # "node2" => "sync/salt/key/node2.pub",
      }
    end
  end
end
